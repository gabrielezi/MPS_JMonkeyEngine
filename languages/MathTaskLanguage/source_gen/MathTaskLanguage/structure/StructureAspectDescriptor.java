package MathTaskLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptQuestion = createDescriptorForQuestion();
  /*package*/ final ConceptDescriptor myConceptQuestions = createDescriptorForQuestions();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptQuestion, myConceptQuestions);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Question:
        return myConceptQuestion;
      case LanguageConceptSwitch.Questions:
        return myConceptQuestions;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForQuestion() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MathTaskLanguage", "Question", 0x8fbac3a785ba48f9L, 0x88458d9d85fd4680L, 0x42d26f631a9142d3L);
    b.class_(false, false, false);
    b.origin("r:9ac3cf75-eaf9-4197-b625-5018f60fefe6(MathTaskLanguage.structure)/4815033423050654419");
    b.version(2);
    b.property("task", 0x42d26f631aa34eb7L).type(PrimitiveTypeId.STRING).origin("4815033423051837111").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQuestions() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MathTaskLanguage", "Questions", 0x8fbac3a785ba48f9L, 0x88458d9d85fd4680L, 0x42d26f631a9142d4L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:9ac3cf75-eaf9-4197-b625-5018f60fefe6(MathTaskLanguage.structure)/4815033423050654420");
    b.version(2);
    b.aggregate("question", 0x42d26f631a9142d7L).target(0x8fbac3a785ba48f9L, 0x88458d9d85fd4680L, 0x42d26f631a9142d3L).optional(false).ordered(true).multiple(true).origin("4815033423050654423").done();
    return b.create();
  }
}
